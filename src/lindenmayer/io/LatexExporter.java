/*
 *  Lindenmayer
 *  see AUTHORS for a list of contributors.
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package lindenmayer.io;

import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.List;
import lindenmayer.grammar.TreePlant;

/**
 * This class contains routines for exporting a "grown" plant
 * to the Latex format.
 * @author Christian Lins
 */
public class LatexExporter implements Exporter {

	public String getDescription() {
		return "LaTeX Picture";
	}

	public String getFileExtension() {
		return ".tex";
	}

	private static int[] scaleLineArguments(int dx, int dy) {
		int[] args = new int[2];

		while (!(dx <= 6 && dx >= -6) || !(dy <= 6 && dy >= -6)) {
			dx = dx / 2;
			dy = dy / 2;
		}

		args[0] = dx;
		args[1] = dy;

		return args;
	}

	public void export(TreePlant plant, OutputStream outstr)
			throws IOException {
		PrintWriter out = new PrintWriter(new OutputStreamWriter(outstr));

		out.println("% Generated by Lindenmayer");
		out.println("\\unitlength=1.000000pt");
		out.print("\\begin{picture}");
		out.println("(" + plant.getWidth() + ", " + plant.getHeight() + ")");

		List<int[]> linePoints = null;//plant.getLinePoints();
		for (int[] line : linePoints) {
			int dx, dy, len;
			dx = line[0] - line[2];
			dy = line[1] - line[3];
			len = (int) Math.round(Math.sqrt(dx * dx + dy * dy));
			int[] sd = scaleLineArguments(dx, dy);
			dx = sd[0];
			dy = sd[1];

			out.print("\\put(" + line[0] + "," + line[1] + ")");
			out.print("{");
			out.print("\\line(" + dx + "," + dy + "){");
			out.print(len);
			out.println("}}");
		}

		out.println("\\end{picture}");
		out.flush();
		out.close();
	}
}
