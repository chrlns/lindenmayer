<?xml version="1.0" encoding="UTF-8"?>
<project name="coredesigner" default="main" basedir=".">

    <property name="prj" value="."/>
    <property name="out" value="build"/>
    <property name="build.dir" value="${out}"/>
    <property name="build.class" value="${build.dir}/class"/>

    <!-- define how to handle CLASSPATH environment -->
    <property name="build.sysclasspath" value="ignore"/>

    <!-- set "modern" java compiler -->
    <property name="build.compiler" value="modern"/>

    <!-- set wether we want to compile with debug information -->
    <property name="debug" value="off"/>

    <!-- set wether we want to compile with optimisation -->
    <property name="optimize" value="on"/>

    <!-- set wether we want to compile with or without deprecation -->
    <property name="deprecation" value="off"/>

    <!-- classpath settings for compile and javadoc tasks -->
    <path id="classpath">
        <pathelement location="${build.class}"/>
        <pathelement location="/usr/share/java/jdom1.jar"/>
    </path>


    <!-- the main target, called in recursive builds -->
    <target name="main" depends="prepare,compile,jar"/>

        <!-- prepare output directories - -->
        <target name="prepare">
                <mkdir dir="${build.dir}"/>
                <mkdir dir="${build.class}"/>
                <copy todir="${build.class}/lindenmayer/resource">
                        <fileset dir="src/lindenmayer/resource"/>
                </copy>
        </target>


    <target name="compile" depends="prepare">
        <javac destdir="${build.class}"
               debug="${debug}"
               deprecation="${deprecation}"
               optimize="${optimize}"
               classpathref="classpath">
            <src path="./src"/>
                <include name="lindenmayer/**/*.java"/>
        </javac>
    </target>
        
    <!-- create jar file -->
    <target name="jar" depends="prepare,compile"> 
        <jar jarfile="${build.dir}/lindenmayer.jar"
             basedir="${build.class}"
             manifest="manifest.mf">
                <include name="lindenmayer/**/*"/>
        </jar>
    </target>


    <!-- clean up -->
    <target name="clean" depends="prepare">
        <delete includeEmptyDirs="true">
            <fileset dir="${out}"></fileset> 
        </delete>
    </target>
</project>
